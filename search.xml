<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Docker部署与搭建</title>
    <url>/2023/01/06/Docker%E9%83%A8%E7%BD%B2%E4%B8%8E%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="📬知识点"><a href="#📬知识点" class="headerlink" title="📬知识点"></a><strong>📬</strong>知识点</h1><h2 id="一、什么是Docker"><a href="#一、什么是Docker" class="headerlink" title="一、什么是Docker"></a>一、什么是Docker</h2><p>Docker 最初是 dotCloud 公司创始人 Solomon Hykes 在法国期间发起的一个公司内部项目，它是基于 dotCloud 公司多年云服务技术的一次革新，并于 2013 年 3 月以 Apache 2.0 授权协议开源，主要项目代码在 GitHub 上进行维护。Docker 项目后来还加入了 Linux 基金会，并成立推动 开放容器联盟（OCI）。<br>Docker 使用 Google 公司推出的 Go 语言 进行开发实现，基于 Linux 内核的 cgroup，namespace，以及 AUFS 类的 Union FS 等技术，对进程进行封装隔离，属于 操作系统层面的虚拟化技术。由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。最初实现是基于 LXC，从 0.7 版本以后开始去除 LXC，转而使用自行开发的 libcontainer，从 1.11 开始，则进一步演进为使用 runC 和 containerd。</p>
<p>Docker 在容器的基础上，进行了进一步的封装，从文件系统、网络互联到进程隔离等等，极大的简化了容器的创建和维护。使得 Docker 技术比虚拟机技术更为轻便、快捷。<br>如今，Docker 通过对 Linux 容器技术 LXC（Linux Containers）等进一步优化，提供了各种容器管理工具，通过容器来管理应用，这样便可以达到 “ <strong>Build Once, Works Everywhere</strong> ” 的目的。也就是说对于开发和部署来说，使用 Docker 可以：</p>
<ul>
<li>更快速的交付和部署应用环境。</li>
<li>更高效的资源利用率。</li>
<li>更便捷的迁移和扩展性。</li>
<li>更便捷的应用更新管理。</li>
</ul>
<h2 id="二、Docker的安装与部署"><a href="#二、Docker的安装与部署" class="headerlink" title="二、Docker的安装与部署"></a>二、Docker的安装与部署</h2><h3 id="1-Dcoker安装"><a href="#1-Dcoker安装" class="headerlink" title="1.Dcoker安装"></a>1.Dcoker安装</h3><p>此处一<strong>CentOS</strong>为例，不同的Linux发行版本安装过程有所差异。<br>安装环境：Centos 3.10.0-1160.el7.x86_64</p>
<h3 id="（1）安装命令如下："><a href="#（1）安装命令如下：" class="headerlink" title="（1）安装命令如下："></a>（1）安装命令如下：</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y install docker  ==》 安装docker    </span><br><span class="line">service docker start   ==》 启动docker服务</span><br></pre></td></tr></table></figure>
<p><a href="https://cdn.nlark.com/yuque/0/2020/jpeg/677605/1608711081436-ae7f2693-99a6-45a3-aeb8-3d377a9b2762.jpeg#height=215&id=Z7f8d&name=B1270948DC1386F061F9F137A55CAE3C.jpg&originHeight=286&originWidth=729&originalType=binary&ratio=1&rotation=0&showTitle=false&size=114432&status=done&style=stroke&title=&width=547"><img  src="https://cdn.nlark.com/yuque/0/2020/jpeg/677605/1608711081436-ae7f2693-99a6-45a3-aeb8-3d377a9b2762.jpeg#height=215&id=Z7f8d&name=B1270948DC1386F061F9F137A55CAE3C.jpg&originHeight=286&originWidth=729&originalType=binary&ratio=1&rotation=0&showTitle=false&size=114432&status=done&style=stroke&title=&width=547"  ><span class="image-caption">B1270948DC1386F061F9F137A55CAE3C.jpg</span></a></p>
<h3 id="（2）查看版本号"><a href="#（2）查看版本号" class="headerlink" title="（2）查看版本号"></a>（2）查看版本号</h3><p><strong>通过命令</strong>docker version<strong>查看Docker版本号来看是否安装成功：</strong><br><img  src="https://cdn.nlark.com/yuque/0/2020/jpeg/677605/1608714329153-d14b99d9-28ad-44b7-adb1-f1acae707f15.jpeg#height=245&id=UvxCT&name=6ABA7CDD9F9BDF3FCB46EAC173677ADE.jpg&originHeight=327&originWidth=718&originalType=binary&ratio=1&rotation=0&showTitle=false&size=94823&status=done&style=shadow&title=&width=539"  ><span class="image-caption">6ABA7CDD9F9BDF3FCB46EAC173677ADE.jpg</span></p>
<h3 id="（3）镜像加速"><a href="#（3）镜像加速" class="headerlink" title="（3）镜像加速"></a>（3）镜像加速</h3><p>鉴于国内网络问题，后续拉取 Docker 镜像十分缓慢，我们可以需要配置加速器来解决，我使用的是网易的镜像地址：<a href="http://hub-mirror.c.163.com/">http://hub-mirror.c.163.com</a>。<br>新版的 Docker 使用 <strong>&#x2F;etc&#x2F;docker&#x2F;daemon.json</strong>（Linux） 来配置 Daemon。<br>在该配置文件中加入（没有该文件的话，请先建一个）：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 添加至/etc/docker/daemon.json中*/</span></span><br><span class="line"><span class="punctuation">&#123;</span> </span><br><span class="line">	<span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;https://c.163.com/hub#/m/home/&quot;</span><span class="punctuation">]</span>    </span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="（4）hello-world测试"><a href="#（4）hello-world测试" class="headerlink" title="（4）hello-world测试"></a>（4）hello-world测试</h3><p>输入docker run hello-world，首先下载镜像需等待一段时间。当看到<br><img  src="https://cdn.nlark.com/yuque/0/2020/jpeg/677605/1608714261945-f3758f10-64a3-47f0-82a5-f18f16812d5d.jpeg#height=454&id=Vej4L&name=481C409232D115A14FA063259512585F.jpg&originHeight=605&originWidth=734&originalType=binary&ratio=1&rotation=0&showTitle=false&size=254628&status=done&style=stroke&title=&width=551"  ><span class="image-caption">481C409232D115A14FA063259512585F.jpg</span></p>
]]></content>
  </entry>
</search>
